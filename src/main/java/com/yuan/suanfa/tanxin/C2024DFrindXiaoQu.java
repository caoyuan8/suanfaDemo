package com.yuan.suanfa.tanxin;

import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

/**
 * 【贪心】2024D-小朋友来自多少小区
 *题目描述
 * 幼儿园组织活动，老师布置了一个任务: 每个小朋友去了解与自己同一个小区的小朋友还有几个。我们将这些数量汇总到数组garden中，请根据这些小朋友给出的信息，计算班级小朋友至少来自几个小区？
 * 输入
 * garden = [2, 2, 3]
 * 说明:
 * garden数组长度最大为999。每个小区的小朋友数量最多1000人，也就是garden的范围为[0,999]
 * 输出
 * 一个数字
 *
 * 示例
 * 输入
 * 2 2 3
 * 输出
 * 7
 * 说明
 * 第一个小朋友反馈有两个小朋友和自己同一小区，即此小区有3个小朋友
 * 第二个小朋友反馈有两个小朋友和自己同一小区，即此小区有3个小朋友。
 * 这两个小朋友，可能是同一小区的，且此小区的小朋友只有3个人。
 * 第三个小朋友反馈还有3个小朋友与自己同一小区，则这些小朋友只能是另外一个小区的。这个小区有4个小朋友。
 * 班级里至少有3+4 = 7个小朋友。
 *
 * 解题思路
 * 错误修正
 * 首先题目描述中的设问是有问题的。
 * 按照示例和说明，“计算班级小朋友至少来自几个小区?”这个问题是不正确。正确的问题应该是“计算班级里至少有几个小朋友？”。
 * 另外，从示例可以得知，虽然最终算出班级里至少有7个小朋友，但只有3个小朋友给出了小区信息。所以garden数组的长度，并不能直接得到小朋友的总数。
 *
 * 举例讨论
 * 排除掉上述题干干扰，这个问题是一个非常有意思的题目。
 * 示例其实提供了一个思考方向。思考以下三组不同的示例。
 * 示例一
 * 2 2 3
 * 示例一和题目给定的示例是一样的。答案是7。
 *
 *
 * 示例二
 * 2 2 2 3
 * 对于示例二，答案也是7。
 * 因为对于第三个反馈有2个小朋友和自己来自同一小区的小朋友来说，他有可能和前两个小朋友也位于同一个小区。
 * 也就是说，这个人数为3的小区，每个小朋友都反馈了人数信息。
 * 最后一个小朋友反馈还有3个小朋友与自己同一小区，则这些小朋友只能是另外一个小区的。这个小区有4个小朋友。
 * 故班级里至少有3+4 = 7个小朋友。
 *
 * 示例三
 * 2 2 2 2 3
 * ceil(4 / (2+1)) * （2+1） = 2 * 3 = 6
 * ceil(1 / (3+1)) * （3+1） = 1 * 4 = 4
 * 对于示例三，情况稍微有些变化，答案是10。
 * 和示例二类似，前三个小朋友可以来自同一个人数为3的小区，最后一个小朋友来自一个人数为4的小区。
 * 对于第四个小朋友，他也反馈有2个小朋友和自己来自同一小区，但他不可能和前三个小朋友是同一个小区了，因为这个小区最多只能有3个人是同一个小区的。
 * 所以第四个小朋友必须单独来自一个人数为3的小区。
 * 故班级里至少有3+3+4 = 10个小朋友。
 *
 */
public class C2024DFrindXiaoQu {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Map<Integer, Integer> dic = new HashMap<>();

        while (scanner.hasNext()) {
            int val = scanner.nextInt();
            dic.put(val, dic.getOrDefault(val, 0) + 1);
        }

        int ans = 0;
        for (Map.Entry<Integer, Integer> entry : dic.entrySet()) {
            int m = entry.getKey();
            int n = entry.getValue();
            ans += Math.ceil((double) n / (m + 1)) * (m + 1);
        }

        System.out.println(ans);
    }


}
